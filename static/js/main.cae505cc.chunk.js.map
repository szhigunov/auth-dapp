{"version":3,"sources":["components/GetAuthograph.tsx","components/CreateAuthograph.tsx","routes/Home.tsx","modules/wallet.js","routes/Profile.tsx","routes/Collectibles.tsx","utils/qrcode.ts","routes/QRCode.tsx","modules/const.js","modules/autograph.js","routes/Create.tsx","routes/Get.tsx","routes/routes.ts","components/Loading.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","root","flexGrow","padding","GetAuthograph","to","Button","CreateAuthograph","introBox","buttonBox","display","justifyContent","Home","classes","Box","className","Paper","Typography","variant","component","storageMnemonic","storagePath","wallet","localStorage","getItem","Wallet","fromMnemonic","createRandom","updateWalletStorage","setItem","mnemonic","path","getWalletAddress","address","_getWallet","avatar","margin","textField","marginLeft","marginRight","width","profileBox","marginTop","height","flexDirection","Profile","React","useState","setAddress","useEffect","console","log","Divider","Avatar","slice","TextField","id","label","defaultValue","toLowerCase","Collectibles","make","input","qr","qrcode","addData","e","withRouter","match","params","QRCodeComponent","createSvgTag","style","maxHeight","dangerouslySetInnerHTML","__html","Link","color","contractAddress","createAutograph","a","expiresAt","Date","now","autographs","giver","signMessage","utils","solidityKeccak256","Math","floor","getTime","signature","box","progress","createAuth","cb","string","history","url","push","CircularProgress","routes","key","exact","QRCode","Create","Loading","menuButton","spacing","title","main","RouteWithSubRoutes","route","render","props","App","value","setValue","AppBar","position","Toolbar","Container","maxWidth","map","i","BottomNavigation","onChange","event","newValue","showLabels","BottomNavigationAction","icon","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cae505cc.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1,\n      padding: 24\n    }\n}));\n\nconst GetAuthograph:React.SFC = () => {\n    const classes = useStyles();\n\n    return (\n        <Link to=\"/get\">\n            <Button>\n                Get Authograph\n            </Button>\n        </Link>\n    )\n}\n\nexport default GetAuthograph;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1,\n      padding: 24\n    }\n}));\n\nconst CreateAuthograph:React.SFC = () => {\n    const classes = useStyles();\n\n    return (\n        <Link to=\"/create\">\n            <Button>\n                Create Authograph\n            </Button>\n        </Link>\n    )\n}\n\nexport default CreateAuthograph;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport GetAuthograph from '../components/GetAuthograph'\nimport CreateAuthograph from '../components/CreateAuthograph'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1,\n      padding: 24\n    },\n    introBox: {},\n    buttonBox: {\n        display: 'flex',\n        justifyContent: 'center'\n    }\n}));\n\nconst Home:React.SFC = () => {\n    const classes = useStyles();\n\n    return (\n        <Box className={classes.introBox}>\n            <Paper className={classes.root}>\n                <Typography variant=\"h5\" component=\"h3\">\n                    Welcome to Crypatographer.\n                </Typography>\n                <br/>\n                <Typography component=\"p\">\n                    <b>Crypatographer</b> can be used to collect authographs and proofs of meeting from people you met.\n                </Typography>\n                <br/>\n                <Box className={classes.buttonBox}>\n                    <CreateAuthograph />\n                    <GetAuthograph />\n                </Box>\n            </Paper>\n        </Box>\n    )\n}\n\nexport default Home;\n","import { Wallet } from 'ethers';\n\nconst storageMnemonic = 'wallet-mnemonic';\nconst storagePath = 'wallet-path';\n\nlet wallet = localStorage.getItem(storageMnemonic) && localStorage.getItem(storagePath)\n  ? Wallet.fromMnemonic(localStorage.getItem(storageMnemonic), localStorage.getItem(storagePath))\n  : Wallet.createRandom();\n\nfunction updateWalletStorage() {\n  localStorage.setItem(storageMnemonic, wallet.mnemonic);\n  localStorage.setItem(storagePath, wallet.path); // Defaults to m/44’/60’/0’/0/0\n}\n\nupdateWalletStorage();\n\n/**\n * Restores wallet from mnemonic.\n * @param {string} mnemonic - Seed words.\n */\nexport async function restoreFromBip039Mnemonic(mnemonic) {\n  wallet = Wallet.fromMnemonic(mnemonic); // Assuming default path\n  updateWalletStorage();\n}\n\n/**\n * Returns seed words of the currently generated wallet.\n * @returns {string} - Seed words.\n */\nexport async function revealSeedWords() {\n  return wallet.mnemonic;\n}\n\n/**\n * @returns {string} - Current wallet's address.\n */\nexport function getWalletAddress() {\n  return wallet.address;\n}\n\nexport function _getWallet() {\n  return wallet;\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Box from '@material-ui/core/Box';\nimport Divider from '@material-ui/core/Divider';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport { getWalletAddress } from '../modules/wallet'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    avatar: {\n        margin: 10,\n    },\n    textField: {\n        marginLeft: '16px',\n        marginRight: '16px',\n        width: '250px'\n      },\n    profileBox: {\n        marginTop: '16px',\n        height: '100%',\n        justifyContent: 'flex-start',\n        flexDirection: 'column',\n        display: 'flex'\n      },\n}));\n\nconst Profile:React.SFC = () => {\n    const classes = useStyles();\n    const [address, setAddress] = React.useState('');\n\n    React.useEffect(() => {\n        if(!address) {\n            setAddress(getWalletAddress())\n        }\n    }, [address])\n\n    console.log(address)\n    return (address ? \n        <Box className={classes.profileBox}>\n            <Typography variant=\"h5\" component=\"h3\">\n                Profile\n            </Typography>\n            <Divider />\n            <Avatar className={classes.avatar}>{address.slice(2,4)}</Avatar>\n            <Typography variant=\"h6\" component=\"h6\">\n                UserName\n            </Typography>\n            <Box>\n                <TextField id=\"standard-input\" className={classes.textField} label=\"Wallet\" defaultValue={address.toLowerCase()} margin=\"normal\" />\n            </Box>\n        </Box>\n    : null)\n}\n\nexport default Profile;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1,\n    },\n    introBox: {\n      \n    }\n}));\n\nconst Collectibles:React.SFC = () => {\n    const classes = useStyles();\n\n    return (\n        <Box className={classes.introBox}>\n            <Paper className={classes.root}>\n                <Typography variant=\"h5\" component=\"h3\">\n                    This is a sheet of paper.\n                </Typography>\n                <Typography component=\"p\">\n                    Paper can be used to build surface or other elements for your application.\n                </Typography>\n            </Paper>\n        </Box>\n    )\n}\n\nexport default Collectibles;\n","import qrcode from 'qrcode-generator'\n\nexport const make = (input: string) => {\n  try {\n    const qr = qrcode(0, 'M')\n    qr.addData(input)\n    qr.make()\n    return qr\n  } catch (e) {\n    console.log(e)\n  }\n}\n\nexport default {\n  qrcode,\n  make\n}\n","import React from 'react';\n\nimport { withRouter } from 'react-router'\nimport { Link } from 'react-router-dom'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nimport Box from '@material-ui/core/Box';\nimport { make } from '../utils/qrcode'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1,\n    },\n    introBox: {\n      \n    }\n}));\n\n\nconst QRCode:React.SFC = ({match}: any) => {\n    const classes = useStyles();\n    const qr = make(`get/${match.params.id}`)\n    const QRCodeComponent = qr && qr.createSvgTag(2, 3)\n\n    return (\n        <Box className={classes.introBox}>\n            <div style={{ maxHeight: 320, width: '100%'}} dangerouslySetInnerHTML={{__html: QRCodeComponent || \"\"}}></div>\n            <Button component={Link} to=\"/\" color=\"secondary\">Close</Button>\n        </Box>\n    )\n}\n\nexport default withRouter(QRCode);\n","export const contractAddress = '0x';\nexport const delegatedBackEndUrl = 'https://dapp.ml/delegated-tx';","import { contractAddress, delegatedBackEndUrl } from './const';\nimport { utils } from 'ethers';\nimport { _getWallet, getWalletAddress } from './wallet';\nimport { httpPost } from './utils';\n\n/**\n * Make an autograph for somebody else. The content which this function returns has to be rendered on QR code.\n * @param {object} params - Parameters.\n * @param {Date} params.expiresAt - When the signature expires.\n * @param {number} params.expiresAt - When the signature expires.\n * @returns {string} - HEX string of the signature.\n */\nexport async function createAutograph({\n  expiresAt = new Date(Date.now() + 1000 * 60 * 2),\n  autographs = 50,\n} = {}) {\n  const wallet = _getWallet();\n  const giver = getWalletAddress();\n  const signature = await wallet.signMessage(utils.solidityKeccak256(\n    [\n      'address', // contractAddress\n      'address', // autograph giver's address\n      'uint256', // number of autographs\n      'uint256'  // expires at\n    ],\n    [\n      contractAddress,\n      giver,\n      autographs,\n      expiresAt = Math.floor(expiresAt.getTime() / 1000)\n    ]\n  ));\n  return `${giver}|${autographs}|${expiresAt}|${signature}`;\n}\n\n/**\n * Claims autograph (delegated transaction which resolves once the NFT token is claimed).\n * @param {string} autograph - Somebody elses autograph (created via createAutograph).\n * @returns {string} - 'confirmed'\n */\nexport async function claimAutograph(autograph) {\n  const [giver, autographs, expiresAt, giverSignature] = autograph.split('|');\n  const wallet = _getWallet();\n  const { id, signatureOptions } = await httpPost(`${delegatedBackEndUrl}/request`, {\n    contractAddress: contractAddress,\n    from: getWalletAddress(),\n    functionArguments: [\n      autographs,\n      expiresAt,\n      getWalletAddress(),\n      giver,\n      giverSignature\n    ],\n    functionName: 'claimAutograph'\n  });\n  const sigOption = signatureOptions.find(x => x.standard === 'eth_personalSign');\n  if (!sigOption) {\n    throw new Error(`No signature option eth_personalSign is provided by back end ${delegatedBackEndUrl}`);\n  }\n  const delegatedSignature = await wallet.signMessage(utils.solidityKeccak256(\n    [\n      'address', // contract address\n      'address', // NFT receiver\n      'uint256', // number of autographs\n      'uint256', // expires at\n      'bytes'    // autograph giver's signature\n    ],\n    [\n      contractAddress,\n      getWalletAddress(),\n      autographs,\n      expiresAt,\n      giverSignature\n    ]\n  ));\n  const { result } = await httpPost(`${delegatedBackEndUrl}/confirm`, {\n    requestId: id,\n    signatureStandard: 'eth_personalSign',\n    signature: delegatedSignature\n  });\n  return result.status; // should be \"confirmed\"\n}\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport { withRouter } from 'react-router'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { createAutograph } from '../modules/autograph' \n\nconst useStyles = makeStyles(() => ({\n    box: {\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    progress: {\n        margin: 24,\n    }\n}));\n\nconst createAuth = async (cb: any) => {\n    const string = await createAutograph()\n    cb(string)\n}\n\nconst Create:React.SFC = ({ history } : any) => {\n    const classes = useStyles();\n\n    React.useEffect(() => {\n        createAuth((url: string) => (history.push('/qrcode/?url=' + url)))\n    })\n    \n    \n    return <Box className={classes.box}><CircularProgress className={classes.progress} /></Box>\n}\n\nexport default withRouter(Create);\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(() => ({\n    box: {\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    progress: {\n        margin: 24,\n    }\n}));\n\nconst Get:React.SFC = () => {\n    const classes = useStyles();\n    return <Box className={classes.box}><CircularProgress className={classes.progress} color=\"secondary\" /></Box>\n}\n\nexport default Get;\n","\nimport { Home, Profile, Collectibles, QRCode, Create, Get } from './'\n\nconst routes = [\n    {\n      key: 'home',\n      path: \"/\",\n      exact: true,\n      component: Home\n    },\n    {\n      key: 'profile',\n      path: \"/profile\",\n      component: Profile\n    },\n    {\n      key: 'collectibles',\n      path: \"/collectibles\",\n      component: Collectibles\n    },\n    {\n      key: 'qrcode',\n      path: \"/qrcode/:id\",\n      component: QRCode\n    },\n    {\n      key: 'create',\n      path: \"/create\",\n      component: Create\n    },\n    {\n      key: 'get',\n      path: \"/get/:id\",\n      component: Get\n    }\n];\n\nexport default routes","import React from 'react';\nimport Box from '@material-ui/core/Box';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(() => ({\n    box: {\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    progress: {\n        margin: 24,\n    }\n}));\n\n\n\nconst Loading:React.SFC = () => {\n    const classes = useStyles();\n    return <Box className={classes.box}><CircularProgress className={classes.progress} /></Box>\n}\n\nexport default Loading;\n","import React from 'react';\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport PersonIcon from '@material-ui/icons/Person';\n\nimport { default as routes } from './routes/routes'\n\nimport { getWalletAddress } from './modules/wallet'\n\nimport Loading from './components/Loading'\n\nimport './App.css';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  main: {\n    height: 'calc(100vh - 112px)',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    display: 'flex'\n  },\n  introBox: {\n    \n  }\n}));\n\nfunction RouteWithSubRoutes(route: any) {\n  return (\n    <Route\n      path={route.path}\n      exact={route.exact}\n      render={props => (\n        // pass the sub-routes down to keep nesting\n        <route.component {...props} routes={route.routes} />\n      )}\n    />\n  );\n}\n\n\nconst App: React.FC = () => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const [address, setAddress] = React.useState('');\n\n  React.useEffect(() => {\n    if(!address) {\n      setAddress(getWalletAddress())\n    }\n  }, [address])\n\n  return (\n    <div className={classes.root}>\n      <Box>\n        <Router>\n          <AppBar position=\"static\">\n            <Toolbar>\n              <Typography variant=\"h6\" className={classes.title}>\n                Crypatographer\n              </Typography>\n            </Toolbar>\n          </AppBar>\n            <Container maxWidth=\"sm\" className={classes.main}>\n              {!address && <Loading />}\n              {address && routes.map((route, i) => (\n                <RouteWithSubRoutes key={i} {...route} />\n              ))}\n            </Container>\n          <BottomNavigation\n            value={value}\n            onChange={(event, newValue) => {\n              setValue(newValue);\n            }}\n            showLabels\n            className={classes.root}\n          >\n            <BottomNavigationAction component={Link} label=\"Home\" icon={<FavoriteIcon />} to=\"/\" />\n            <BottomNavigationAction component={Link} label=\"Profile\" icon={<PersonIcon />} to=\"/profile\" />\n            <BottomNavigationAction component={Link} label=\"Collectibles\" icon={<RestoreIcon />} to=\"/collectibles\" />\n          </BottomNavigation>\n        </Router>\n    </Box>\n    </div>\n  );\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}