{"version":3,"sources":["components/CreateAuthograph.tsx","routes/Home.tsx","modules/wallet.js","routes/Profile.tsx","routes/Collectibles.tsx","utils/qrcode.ts","routes/QRCode.tsx","modules/const.js","modules/utils/http.js","modules/autograph.js","routes/Create.tsx","routes/Get.tsx","routes/routes.ts","components/Loading.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","root","flexGrow","padding","icon","marginRight","CreateAuthograph","classes","to","Button","variant","size","color","className","introBox","buttonBox","display","justifyContent","Home","Box","Paper","Typography","component","storageMnemonic","storagePath","wallet","localStorage","getItem","Wallet","fromMnemonic","createRandom","updateWalletStorage","setItem","mnemonic","path","getWalletAddress","address","_getWallet","avatar","width","height","margin","textField","marginLeft","profileBox","backgroundColor","marginTop","flexDirection","Profile","React","useState","setAddress","useEffect","style","alignContent","Divider","Avatar","TextField","id","label","defaultValue","toLowerCase","maxWidth","collectiblesBox","Collectibles","target","href","List","ListItem","ListItemAvatar","ListItemText","primary","secondary","Badge","overlap","anchorOrigin","vertical","horizontal","badgeContent","make","input","qr","qrcode","addData","e","console","log","withRouter","match","process","params","QRCodeComponent","createSvgTag","maxHeight","dangerouslySetInnerHTML","__html","Link","contractAddress","delegatedBackEndUrl","httpRequest","url","a","method","data","undefined","Promise","resolve","reject","xhr","XMLHttpRequest","open","setRequestHeader","onload","readyState","status","JSON","parse","responseText","parsed","error","onerror","send","stringify","httpPost","createAutograph","expiresAt","Date","now","autographs","giver","signMessage","utils","arrayify","solidityKeccak256","Math","floor","getTime","signature","claimAutograph","autograph","split","giverSignature","from","functionArguments","functionName","request","sigOption","signatureOptions","find","x","standard","Error","dataToSign","delegatedSignature","requestId","signatureStandard","result","box","progress","createAuth","cb","string","history","push","CircularProgress","claimAuth","routes","key","exact","QRCode","Create","Loading","menuButton","spacing","title","main","RouteWithSubRoutes","route","render","props","App","value","setValue","basename","AppBar","position","Toolbar","Container","map","i","BottomNavigation","onChange","event","newValue","showLabels","BottomNavigationAction","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e7ca9a4a.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1,\n      padding: 24\n    },\n    icon: {\n        marginRight: '8px'\n    }\n}));\n\nconst CreateAuthograph:React.SFC = () => {\n    const classes = useStyles();\n\n    return (\n        <Link to=\"/create\">\n            <Button variant=\"contained\" size=\"large\" color=\"primary\">\n                <AddIcon className={classes.icon} />\n                Create Authograph\n            </Button>\n        </Link>\n    )\n}\n\nexport default CreateAuthograph;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport GetAuthograph from '../components/GetAuthograph'\nimport CreateAuthograph from '../components/CreateAuthograph'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1,\n      padding: 24\n    },\n    introBox: {},\n    buttonBox: {\n        display: 'flex',\n        justifyContent: 'center'\n    }\n}));\n\nconst Home:React.SFC = () => {\n    const classes = useStyles();\n\n    return (\n        <Box className={classes.introBox}>\n            <Paper className={classes.root}>\n                <Typography variant=\"h5\" component=\"h3\">\n                    Welcome to <b>Crypatograph</b>\n                </Typography>\n                <br/>\n                <Typography component=\"p\">\n                    <b>Crypatograph</b> can be used to collect authographs and proofs of meeting from people you met.\n                </Typography>\n                <br/>\n                <Box className={classes.buttonBox}>\n                    <CreateAuthograph />\n                    {/* <GetAuthograph /> */}\n                </Box>\n            </Paper>\n        </Box>\n    )\n}\n\nexport default Home;\n","import { Wallet } from 'ethers';\n\nconst storageMnemonic = 'wallet-mnemonic';\nconst storagePath = 'wallet-path';\n\nlet wallet = localStorage.getItem(storageMnemonic) && localStorage.getItem(storagePath)\n  ? Wallet.fromMnemonic(localStorage.getItem(storageMnemonic), localStorage.getItem(storagePath))\n  : Wallet.createRandom();\n\nfunction updateWalletStorage() {\n  localStorage.setItem(storageMnemonic, wallet.mnemonic);\n  localStorage.setItem(storagePath, wallet.path); // Defaults to m/44’/60’/0’/0/0\n}\n\nupdateWalletStorage();\n\n/**\n * Restores wallet from mnemonic.\n * @param {string} mnemonic - Seed words.\n */\nexport async function restoreFromBip039Mnemonic(mnemonic) {\n  wallet = Wallet.fromMnemonic(mnemonic); // Assuming default path\n  updateWalletStorage();\n}\n\n/**\n * Returns seed words of the currently generated wallet.\n * @returns {string} - Seed words.\n */\nexport async function revealSeedWords() {\n  return wallet.mnemonic;\n}\n\n/**\n * @returns {string} - Current wallet's address.\n */\nexport function getWalletAddress() {\n  return wallet.address;\n}\n\nexport function _getWallet() {\n  return wallet;\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Box from '@material-ui/core/Box';\nimport Divider from '@material-ui/core/Divider';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nimport { getWalletAddress } from '../modules/wallet'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    avatar: {\n        width: 80,\n        height: 80,\n        margin: 10,\n    },\n    textField: {\n        marginLeft: '16px',\n        marginRight: '16px',\n        width: '250px'\n      },\n    profileBox: {\n        backgroundColor: '#fff',\n        marginTop: '16px',\n        height: '100%',\n        justifyContent: 'flex-start',\n        flexDirection: 'column',\n        display: 'flex'\n      },\n}));\n\nconst Profile:React.SFC = () => {\n    const classes = useStyles();\n    const [address, setAddress] = React.useState('');\n\n    React.useEffect(() => {\n        if(!address) {\n            setAddress(getWalletAddress())\n        }\n    }, [address])\n\n    return (address ? \n        <Box className={classes.profileBox}>\n            <Box style={{ display: 'flex', alignContent:'center', flexDirection: 'row'}}>\n                <Typography variant=\"h5\" component=\"p\">\n                    John <b>DOE</b> Profile\n                </Typography>\n            </Box>\n            <Divider />\n            <Typography variant=\"h6\" component=\"h6\">\n                \n            </Typography>\n            <Box>\n                <Avatar className={classes.avatar}>JD</Avatar>\n            </Box>\n            <Box>\n                <TextField id=\"standard-input\" className={classes.textField} label=\"Wallet\" defaultValue={address.toLowerCase()} margin=\"normal\" />\n            </Box>\n            <Box>\n                <Button>Copy</Button>\n                <Button color=\"secondary\">Reveal secret</Button>\n            </Box>\n        </Box>\n    : null)\n}\n\nexport default Profile;\n","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Divider from '@material-ui/core/Divider';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Box from \"@material-ui/core/Box\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Badge from '@material-ui/core/Badge';\nimport ImageIcon from '@material-ui/icons/VerifiedUser';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360\n  },\n  collectiblesBox: {\n    marginTop: 16,\n    height: '100%',\n    display: \"flex\",\n    justifyContent: 'flex-start',\n    alignContent: 'flex-start',\n    flexDirection: \"column\"\n  }\n}));\n\nconst Collectibles: React.SFC = () => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.collectiblesBox}>\n      <Box\n        style={{\n          display: \"flex\",\n          alignContent: 'center',\n          flexDirection: \"row\"\n        }}\n      >\n        <Typography variant=\"h5\" component=\"p\">\n          John <b>DOE</b> Authographs\n          <a style={{ marginLeft: 16 }} target=\"_blank\" href=\"https://kovan.etherscan.io/address/0xf3214fa89da13b1138be07c9a020e28f9db2a627\">\n            <LaunchIcon color=\"action\"/>\n          </a>\n        </Typography>\n      </Box>\n      <Divider />\n      <List className={classes.root}>\n        <ListItem>\n          <ListItemAvatar>\n            <Avatar>\n              JJ\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"Joanna JOSE\" secondary=\"Jan 9, 2014 | kyiv, UA\" />\n        </ListItem>\n        <ListItem>\n          <ListItemAvatar>\n            <Avatar>\n              JD\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"John DOE\" secondary=\"Jan 7, 2014\" />\n        </ListItem>\n        <ListItem>\n          <ListItemAvatar>\n            <Avatar>\n              DJ\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"Dow JONES\" secondary=\"July 20, 2014 | new york, USA\" />\n        </ListItem>\n        <ListItem>\n          <ListItemAvatar>\n            <Badge overlap=\"circle\" anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }} badgeContent={<ImageIcon color=\"action\"/>}>\n                <Avatar>\n                     PJ\n                </Avatar>\n            </Badge>\n          </ListItemAvatar>\n          <ListItemText primary=\"Polly Jean HARVEY\" secondary=\"July 21, 2014 | glastonbury, UK\" />\n          <a target=\"_blank\" href=\"https://kovan.etherscan.io/tx/0x2d5921fd5f6f8862c440e82b4a6e94cbff3f566f04ec84afe247067a4aa47722\">\n            <LaunchIcon color=\"action\"/>\n          </a>\n        </ListItem>\n      </List>\n    </Box>\n  );\n};\n\nexport default Collectibles;\n","import qrcode from 'qrcode-generator'\n\nexport const make = (input: string) => {\n  try {\n    const qr = qrcode(0, 'M')\n    qr.addData(input)\n    qr.make()\n    return qr\n  } catch (e) {\n    console.log(e)\n  }\n}\n\nexport default {\n  qrcode,\n  make\n}\n","import React from 'react';\n\nimport { withRouter } from 'react-router'\nimport { Link } from 'react-router-dom'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nimport Box from '@material-ui/core/Box';\nimport { make } from '../utils/qrcode'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1,\n    },\n    introBox: {\n      flexDirection: 'column',\n      display: 'flex'\n    }\n}));\n\n\nconst QRCode:React.SFC = ({match}: any) => {\n    const classes = useStyles();\n    const qr = make(`${process.env.REACT_APP_BASE_URL}/#/qrcode/get/${match.params.id}`)\n    const QRCodeComponent = qr && qr.createSvgTag(2, 3)\n\n    return (\n        <Box className={classes.introBox}>\n            <Box><div style={{ maxHeight: 320, width: '100%'}} dangerouslySetInnerHTML={{__html: QRCodeComponent || \"\"}}></div></Box>\n            <Box style={{ display: 'flex', marginLeft: 16, marginTop: 32, width: '100%' }}><Button variant=\"contained\" size=\"large\" component={Link} to=\"/\" color=\"secondary\">Close</Button></Box>\n        </Box>\n    )\n}\n\nexport default withRouter(QRCode);\n","export const contractAddress = '0xf3214fa89da13b1138be07c9a020e28f9db2a627';\n// export const delegatedBackEndUrl = 'https://dapp.ml/delegated-tx';\nexport const delegatedBackEndUrl = 'https://dapp.ml/delegated-tx';","async function httpRequest(url, method = 'GET', data = undefined) {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n    xhr.open(method, url, true);\n    if (data) {\n      xhr.setRequestHeader('Content-Type', 'application/json');\n    }\n    xhr.onload = () => {\n      if (xhr.readyState === 4 && xhr.status >= 200 && xhr.status < 300) {\n        resolve(JSON.parse(xhr.responseText));\n      } else {\n        if (!xhr.responseText) {\n          reject(`HTTPCODE ${xhr.status}`);\n          return;\n        }\n        try {\n          const parsed = JSON.parse(xhr.responseText);\n          reject(\n            (parsed && (parsed.error || parsed)) ||\n              `HTTPCODE ${xhr.status}, ${xhr.responseText}`\n          );\n          return;\n        } catch (e) {\n          reject(xhr.responseText);\n        }\n      }\n    };\n    xhr.onerror = () => reject('request failed');\n    xhr.send(data && JSON.stringify(data));\n  });\n}\n\nexport const httpGet = async url => httpRequest(url);\nexport const httpPost = async (url, data) => httpRequest(url, 'POST', data);\n","import { contractAddress, delegatedBackEndUrl } from './const';\nimport { utils } from 'ethers';\nimport { _getWallet, getWalletAddress } from './wallet';\nimport { httpPost } from './utils';\n\n/**\n * Make an autograph for somebody else. The content which this function returns has to be rendered on QR code.\n * @param {object} params - Parameters.\n * @param {Date} params.expiresAt - When the signature expires.\n * @param {number} params.expiresAt - When the signature expires.\n * @returns {string} - HEX string of the signature.\n */\nexport async function createAutograph({\n  expiresAt = new Date(Date.now() + 1000 * 60 * 100500),\n  autographs = 50,\n} = {}) {\n  const wallet = _getWallet();\n  const giver = getWalletAddress();\n  const signature = await wallet.signMessage(utils.arrayify(utils.solidityKeccak256(\n    [\n      'address', // contractAddress\n      'address', // autograph giver's address\n      'uint256', // number of autographs\n      'uint256'  // expires at\n    ],\n    [\n      contractAddress,\n      giver,\n      autographs,\n      expiresAt = Math.floor(expiresAt.getTime() / 1000)\n    ]\n  )));\n  return `${giver}|${autographs}|${expiresAt}|${signature}`;\n}\n\n/**\n * Claims autograph (delegated transaction which resolves once the NFT token is claimed).\n * @param {string} autograph - Somebody elses autograph (created via createAutograph).\n * @returns {string} - 'confirmed'\n */\nexport async function claimAutograph(autograph) {\n  const [giver, autographs, expiresAt, giverSignature] = autograph.split('|');\n  const wallet = _getWallet();\n  const { request } = await httpPost(`${delegatedBackEndUrl}/request`, {\n    contractAddress: contractAddress,\n    from: getWalletAddress(),\n    functionArguments: [\n      autographs,\n      expiresAt,\n      getWalletAddress(),\n      giver,\n      giverSignature\n    ],\n    functionName: 'claimAutograph'\n  });\n  const sigOption = request.signatureOptions.find(x => x.standard === 'eth_personalSign');\n  if (!sigOption) {\n    throw new Error(`No signature option eth_personalSign is provided by back end ${delegatedBackEndUrl}`);\n  }\n  const delegatedSignature = await wallet.signMessage(utils.arrayify(sigOption.dataToSign));\n  // const delegatedSignature = await wallet.signMessage(utils.solidityKeccak256(\n  //   [\n  //     'address', // contract address\n  //     'address', // NFT receiver\n  //     'uint256', // number of autographs\n  //     'uint256', // expires at\n  //     'bytes'    // autograph giver's signature\n  //   ],\n  //   [\n  //     contractAddress,\n  //     getWalletAddress(),\n  //     autographs,\n  //     expiresAt,\n  //     giverSignature\n  //   ]\n  // ));\n  const { result } = await httpPost(`${delegatedBackEndUrl}/confirm`, {\n    requestId: request.id,\n    signatureStandard: 'eth_personalSign',\n    signature: delegatedSignature\n  });\n  return result.status; // should be \"confirmed\"\n}\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport { withRouter } from 'react-router'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { createAutograph } from '../modules/autograph' \n\nconst useStyles = makeStyles(() => ({\n    box: {\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    progress: {\n        margin: 24,\n    }\n}));\n\nconst createAuth = async (cb: any) => {\n    const string = await createAutograph()\n    cb(string)\n}\n\nconst Create:React.SFC = ({ history } : any) => {\n    const classes = useStyles();\n\n    React.useEffect(() => {\n        createAuth((url: string) => history.push(`/qrcode/${url}`))\n    })\n    \n    \n    return <Box className={classes.box}><CircularProgress className={classes.progress} /></Box>\n}\n\nexport default withRouter(Create);\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport { withRouter } from 'react-router'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { claimAutograph } from '../modules/autograph'\nimport { async } from 'q';\n\nconst useStyles = makeStyles(() => ({\n    box: {\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    progress: {\n        margin: 24,\n    }\n}));\n\nconst claimAuth = async (id: string, cb: any) => {\n    const confirmed = await claimAutograph(id)\n    if (confirmed === 'confirmed') {\n        cb()\n    }\n}\n\nconst Get:React.SFC = ({match, history}: any) => {\n    const classes = useStyles();\n\n    React.useEffect(() => {\n        claimAuth(match.params.id, () => history.push(`/profile/claimed`))\n    })\n\n\n    return <Box className={classes.box}><CircularProgress className={classes.progress} color=\"secondary\" /></Box>\n}\n\nexport default withRouter(Get);\n","\nimport { Home, Profile, Collectibles, QRCode, Create, Get } from './'\n\nconst routes = [\n    {\n      key: 'home',\n      path: \"/\",\n      exact: true,\n      component: Home\n    },\n    {\n      key: 'profile',\n      path: \"/profile\",\n      component: Profile\n    },\n    {\n      key: 'collectibles',\n      path: \"/collectibles\",\n      component: Collectibles\n    },\n    {\n      key: 'qrcode',\n      path: \"/qrcode/:id\",\n      exact: true,\n      component: QRCode\n    },\n    {\n      key: 'create',\n      path: \"/create\",\n      component: Create\n    },\n    {\n      key: 'get',\n      path: \"/qrcode/get/:id\",\n      exact: true,\n      component: Get\n    }\n];\n\nexport default routes","import React from 'react';\nimport Box from '@material-ui/core/Box';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(() => ({\n    box: {\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    progress: {\n        margin: 24,\n    }\n}));\n\n\n\nconst Loading:React.SFC = () => {\n    const classes = useStyles();\n    return <Box className={classes.box}><CircularProgress className={classes.progress} /></Box>\n}\n\nexport default Loading;\n","import React from 'react';\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport PersonIcon from '@material-ui/icons/Person';\n\nimport { default as routes } from './routes/routes'\n\nimport { getWalletAddress } from './modules/wallet'\n\nimport Loading from './components/Loading'\n\nimport './App.css';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  main: {\n    height: 'calc(100vh - 112px)',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    display: 'flex'\n  },\n  introBox: {\n    \n  }\n}));\n\nfunction RouteWithSubRoutes(route: any) {\n  return (\n    <Route\n      path={route.path}\n      exact={route.exact}\n      render={props => (\n        // pass the sub-routes down to keep nesting\n        <route.component {...props} routes={route.routes} />\n      )}\n    />\n  );\n}\n\n\nconst App: React.FC = () => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const [address, setAddress] = React.useState('');\n\n  React.useEffect(() => {\n    if(!address) {\n      setAddress(getWalletAddress())\n    }\n  }, [address])\n\n  return (\n    <div className={classes.root}>\n      <Box style={{ backgroundColor: '#fff' }}>\n        <Router basename=\"auth-dapp\">\n          <AppBar position=\"static\">\n            <Toolbar>\n              <Typography variant=\"h6\" className={classes.title}>\n                Crypatograph.ai\n              </Typography>\n            </Toolbar>\n          </AppBar>\n            <Container maxWidth=\"sm\" className={classes.main}>\n              {!address && <Loading />}\n              {address && routes.map((route, i) => (\n                <RouteWithSubRoutes key={i} {...route} />\n              ))}\n            </Container>\n          <BottomNavigation\n            value={value}\n            onChange={(event, newValue) => {\n              setValue(newValue);\n            }}\n            showLabels\n            className={classes.root}\n          >\n            <BottomNavigationAction component={Link} label=\"Home\" icon={<FavoriteIcon />} to=\"/\" />\n            <BottomNavigationAction component={Link} label=\"Profile\" icon={<PersonIcon />} to=\"/profile\" />\n            <BottomNavigationAction component={Link} label=\"Collectibles\" icon={<RestoreIcon />} to=\"/collectibles\" />\n          </BottomNavigation>\n        </Router>\n    </Box>\n    </div>\n  );\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}